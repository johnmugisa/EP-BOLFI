<?xml version='1.0' encoding='utf-8'?>
<program name="python -m ep_bolfi.kadi_tools.eis_preprocessing" description="Please refer to the --help output of this file." version="3.0">
  <param description="Persistent record identifier of the record with the OCV data." type="long" name="ocv-record" char="r" required="true"/>
  <param description="The name of the OCV file with electrode SOC to cell SOC assignment. Prepare it like ep_bolfi.kadi_tools.extract_ocv_curve does. The 'indices' are what matches SOC to impedance measurements." type="string" name="ocv-file" char="n" required="true"/>
  <param description="Persistent record identifier of the record with the model parameters." type="long" name="parameters-record" char="k" required="true"/>
  <param description="File name of the model parameters. It must be a Python file and contain the following global variables:&#10;&#10; - parameters: The dictionary of parameters to pass on to the solver. May be a ep_bolfi.utility.preprocessing.SubstitutionDict.&#10;&#10; - unknowns: The dictionary of unknown parameters. Instead of single values as in 'parameters', input 2-tuples with their lower and upper bounds, e.g. from literature.&#10;&#10;It may contain the additional following global variables:&#10;&#10; - transform_unknowns: Dictionary for transforming unknowns before inferring them via a normal distribution. Either give as 2-tuples with the first entry being the back-transformation and the second one being the transformation. For convenience, putting 'log' gives log-normal distributions.&#10;&#10; - uncertainties: The dictionary of parameter uncertainties. Used for scrambling them in the simulation samples. Give them as tuples: the first entry is the name of the distribution in scipy.stats, and the following are its parameters. Example: ('norm', mean, std)." type="string" name="parameters-file" char="q" required="true"/>
  <param description="Persistent record identifier of the record to store the input for the optimizer in." type="long" name="output-record" char="o" required="true"/>
  <param description="Optional string to append to the end of the name of the output file." type="string" name="output-suffix" char="u"/>
  <param description="The number of peaks identified by Distribution of Relaxation Times that are to be used for fitting. Positive numbers refer to the first x peaks and negative numbers to the last -x peaks.Default is to use all peaks." type="long" name="number-of-peaks" char="p"/>
  <param description="Limits the frequencies that will be used for fitting. Default is the extent of the frequencies in the data." type="string" name="frequency-limits" char="f" default="[None,\ None]"/>
  <param description="With this as x, every x-th datapoint is considered. This has a practical effect on the DRT, as a DRT with too many datapoints may degrade. Also speeds up simulations." type="long_range" min="1" name="subsampling" char="s" default="1"/>
  <param description="With 'None', does nothing (i.e., cell potentials are used). If set to either 'positive' or 'negative', instead of cell potentials, the base for the displayed voltage will be the potential of the 'positive' or 'negative' electrode against a reference electrode. For placement of said reference electrode, please refer to 'dimensionless-reference-electrode-location'." type="choice" choices="None|positive|negative" case_sensitive="true" name="three-electrode" char="t"/>
  <param description="The location of the reference electrode, given as a scalar between 0 (placed at the point where negative electrode and separator meet) and 1 (placed at the point where positive electrode and separator meet). Defaults to 0.5 (in the middle)." type="real_range" min="0.0" max="1.0" name="dimensionless-reference-electrode-location" char="a" default="0.5"/>
  <param description="Controls the smoothing of the impedance data via Tikhonov regularization. For details, consult the pyimpspec documentation. Defaults to a procedure that calculates this value optimally." type="real" name="lambda_value" char="l" default="-2.0"/>
  <param description="Standard deviation of white noise superimposed on the measurement. This is used in the simulator later and has no impact on the experimental data. Set to the measurement noise in the experiment." type="real" name="white-noise" char="j" default="0.0"/>
  <param description="Discretization points, i.e., amount of frequencies at which the simulated impedance gets evaluated. The frequencies will be log-spaced between minimum and maximum frequency as given above." type="long" name="discretization" char="d" default="200"/>
  <param description="Settings that are passed on to ep_bolfi.ep_bolfi.EP_BOLFI.EP_BOLFI.run. Please see there for the available options. Format as a Python dictionary: e.g., '{&quot;ep_iterations&quot;: 3, ...}'." type="string" name="optimizer-settings" char="e" default="{}"/>
  <param description="Whether or not an already existing file by the same name in the record gets overwritten." type="bool" name="overwrite" char="w" default="false"/>
</program>
