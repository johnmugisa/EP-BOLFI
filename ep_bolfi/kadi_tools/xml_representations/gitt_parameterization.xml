<?xml version='1.0' encoding='utf-8'?>
<program name="python -m ep_bolfi.kadi_tools.gitt_parameterization" description="Please refer to the --help output of this file." version="3.0">
  <param description="Persistent record identifier of the record with the optimizer input." type="long" name="input-record" char="r" required="true"/>
  <param description="File name of the optimizer input file." type="string" name="input-file" char="f" required="true"/>
  <param description="File name of the model parameters. It must be a Python file and contain the following global variables:&#10;&#10; - parameters: The dictionary of parameters to pass on to the solver. May be a ep_bolfi.utility.preprocessing.SubstitutionDict.&#10;&#10; - unknowns: The dictionary of unknown parameters. Instead of single values as in 'parameters', input 2-tuples with their lower and upper bounds, e.g. from literature.&#10;&#10;It may contain the additional following global variables:&#10;&#10; - transform_unknowns: Dictionary for transforming unknowns before inferring them via a normal distribution. Either give as 2-tuples with the first entry being the back-transformation and the second one being the transformation. For convenience, putting 'log' gives log-normal distributions.&#10;&#10; - negative_SOC_from_cell_SOC: A callable, used for OCV subtraction.&#10;&#10; - positive_SOC_from_cell_SOC: A callable, used for OCV subtraction.&#10;&#10; - uncertainties: The dictionary of parameter uncertainties. Used for scrambling them in the simulation samples. Give them as tuples: the first entry is the name of the distribution in scipy.stats, and the following are its parameters. Example: ('norm', mean, std)." type="string" name="parameters-file" char="m" required="true"/>
  <param description="Persistent record identifier of the record to store the output of the optimizer in." type="long" name="output-record" char="o" required="true"/>
  <param description="If set to True, the features will be treated differently. The goal is better behaviour in cases where the initial unknowns' 95% confidence boundaries are already pretty close to the best possible fit. The method is to mostly disable EP, as it is allowing BOLFI to treat the features one-by-one, introducing the possibility that one feature will shrink the confidence boundaries enough such that the next feature is not contained within these boundaries anymore. Instead, BOLFI will fit the vector of all features at once." type="bool" name="convergence-mode" char="c" default="false"/>
  <param description="Seed for RNG. Set to a number for unvarying results." type="long" name="seed" char="s"/>
  <param description="Whether or not an already existing file by the same name in the record gets overwritten." type="bool" name="overwrite" char="w" default="false"/>
</program>
