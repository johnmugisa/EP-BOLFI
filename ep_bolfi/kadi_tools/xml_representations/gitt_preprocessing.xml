<?xml version='1.0' encoding='utf-8'?>
<program name="python -m ep_bolfi.kadi_tools.gitt_preprocessing" description="Please refer to the --help output of this file." version="3.0">
  <param description="Persistent record identifier of the record with the OCV data as prepared by ep_bolfi.kadi_tools.extract_ocv_curve." type="long" name="ocv-record" char="r" required="true"/>
  <param description="The name of the OCV file with electrode SOC to cell SOC assignment as prepared by ep_bolfi.kadi_tools.fit_and_plot_ocv." type="string" name="ocv-file" char="n" required="true"/>
  <param description="Index of the data in the OCV file to use as the starting point of the GITT simulation, as written in its 'indices'. Defaults to the first 'indices' entry in the provided measurement data minus 1." type="real" name="source-index" char="s" default="inf"/>
  <param description="Persistent record identifier of the record with the model parameters." type="long" name="parameters-record" char="k" required="true"/>
  <param description="File name of the model parameters. It must be a Python file and contain the following global variables:&#10;&#10; - parameters: The dictionary of parameters to pass on to the solver. May be a ep_bolfi.utility.preprocessing.SubstitutionDict.&#10;&#10; - unknowns: The dictionary of unknown parameters. Instead of single values as in 'parameters', input 2-tuples with their lower and upper bounds, e.g. from literature.&#10;&#10;It may contain the additional following global variables:&#10;&#10; - transform_unknowns: Dictionary for transforming unknowns before inferring them via a normal distribution. Either give as 2-tuples with the first entry being the back-transformation and the second one being the transformation. For convenience, putting 'log' gives log-normal distributions.&#10;&#10; - uncertainties: The dictionary of parameter uncertainties. Used for scrambling them in the simulation samples. Give them as tuples: the first entry is the name of the distribution in scipy.stats, and the following are its parameters. Example: ('norm', mean, std)." type="string" name="parameters-file" char="q" required="true"/>
  <param description="Persistent record identifier of the record to store the input for the optimizer in." type="long" name="output-record" char="o" required="true"/>
  <param description="Optional string to append to the end of the name of the output file." type="string" name="output-suffix" char="u"/>
  <param description="List of features by their index to consider in the optimization. For each segment of data with index i, five features are computed, which results in the following numbering:&#10;&#10; - 5 * i + 0: asymptotic long-time voltage&#10;&#10; - 5 * i + 1: initial voltage for exponential decay&#10;&#10; - 5 * i + 2: exponential relaxation time&#10;&#10; - 5 * i + 3: actual initial voltage by square root extrapolation&#10;&#10; - 5 * i + 4: square root short-time slope, i.e., dU/dsqrt(t)&#10;&#10;Notation: e.g., '[0, 1, 3]'. Default is all but long-time voltage." type="string" name="feature-choice" char="f"/>
  <param description="If the mean current during a segment is below this value, it will be regarded as zero current for the whole segment for more sensible simulations." type="real" name="current-threshold" char="b" default="1e-08"/>
  <param description="Defaults to False, where positive current means discharge. Change to True if positive current shall mean charge." type="bool" name="flip-current-sign" char="g" default="false"/>
  <param description="Defaults to False, where measured voltage remains unaltered. Change to True if the voltage shall be multiplied by -1." type="bool" name="flip-voltage-sign" char="v" default="false"/>
  <param description="Defaults to False, where the 'Terminal voltage [V]' gets fitted to the data. If True, it minus the OCV gets fitted instead." type="bool" name="overpotential" char="l" default="false"/>
  <param description="With 'None', does nothing (i.e., cell potentials are used). If set to either 'positive' or 'negative', instead of cell potentials, the base for the displayed voltage will be the potential of the 'positive' or 'negative' electrode against a reference electrode. For placement of said reference electrode, please refer to 'dimensionless-reference-electrode-location'." type="choice" choices="None|positive|negative" case_sensitive="true" name="three-electrode" char="t"/>
  <param description="The location of the reference electrode, given as a scalar between 0 (placed at the point where negative electrode and separator meet) and 1 (placed at the point where positive electrode and separator meet). Defaults to 0.5 (in the middle)." type="real_range" min="0.0" max="1.0" name="dimensionless-reference-electrode-location" char="a" default="0.5"/>
  <param description="Controls the timespan (in s) that is used in each segment of data for the square-root fit. It's [start of segment, start of segment + sqrt-cutoff]. Default is 30 seconds." type="real" name="sqrt-cutoff" char="c" default="30.0"/>
  <param description="Controls the timespan (in s) that is sued in each segment of data for the square-root fit. It's modifying the range set by 'sqrt-cutoff' to start at 'start of segment + sqrt-start'. Default is 0 seconds." type="real" name="sqrt-start" char="i" default="0.0"/>
  <param description="Controls the timespan (in s) that is used in each segment of data for the exponential decay fit. It's [end of segment - exp-cutoff, end of segment]. Default is None, i.e., the whole segment gets used." type="real" name="exp-cutoff" char="h"/>
  <param description="Standard deviation of white noise superimposed on the measurement. This is used in the simulator later and has no impact on the experimental data. Set to the measurement noise in the experiment." type="real" name="white-noise" char="j" default="0.0"/>
  <param description="The PyBaMM model to be used. The notation is the object instatiation of ,e.g., the 'SPM', the 'SPMe', the 'DFN', or the 'MPM'. So either write just that name or, e.g., 'DFN(options={&quot;working_electrode&quot;: &quot;positive&quot;}'." type="string" name="model" char="m" default="DFN()"/>
  <param description="Discretization settings. Write as a dictionary: {&#10;&#10;    order_s_n: 'Spectral Volume order in negative particles',&#10;&#10;    order_s_p: 'Spectral Volume order in positive particles',&#10;&#10;    order_e: 'Spectral Volume order in electrolyte',&#10;&#10;    volumes_e_n: 'Spectral Volumes in negative electrode',&#10;&#10;    volumes_e_s: 'Spectral Volumes in separator',&#10;&#10;    volumes_e_p: 'Spectral Volumes in positive electrode',&#10;&#10;    halfcell: 'True with a Li-metal anode, False for full-cell&#10;&#10;}" type="string" name="discretization" char="d" default="{'order_s_n':\ 10,\ 'order_s_p':\ 10,\ 'order_e':\ 10,\ 'volumes_e_n':\ 1,\ 'volumes_e_s':\ 1,\ 'volumes_e_p':\ 1,\ 'halfcell':\ False}"/>
  <param description="Settings that are passed on to ep_bolfi.ep_bolfi.EP_BOLFI.EP_BOLFI.run. Please see there for the available options. Format as a Python dictionary: e.g., '{&quot;ep_iterations&quot;: 3, ...}'." type="string" name="optimizer-settings" char="e" default="{}"/>
  <param description="Whether or not an already existing file by the same name in the record gets overwritten." type="bool" name="overwrite" char="w" default="false"/>
</program>
